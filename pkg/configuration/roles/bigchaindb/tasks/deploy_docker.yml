---
- name: Check if BigchainDB Dockers are already configured
  stat:
    path: "{{ bigchaindb_host_mount_dir }}{{ item|string }}/.bigchaindb"
  with_sequence: start=0 end="{{ docker_cluster_size|int - 1 }}" stride=1
  register: stat_result
  tags: [bigchaindb]

- name: Configuring BigchainDB Docker
  docker_container:
    name: "{{ bigchaindb_docker_name }}{{ item }}"
    hostname: "{{ bigchaindb_docker_name }}{{ item }}"
    image: "{{ bigchaindb_image_name }}"
    volumes:
      - "{{ bigchaindb_host_mount_dir }}{{ item|string }}:/data"
    env:
      BIGCHAINDB_SERVER_BIND: "{{ bigchaindb_server_bind }}"
      BIGCHAINDB_DATABASE_HOST: "{{ hostvars[ansible_hostname]['mongodb' + item|string] }}"
    entrypoint: "bigchaindb -y configure mongodb"
  when: stat_result.results[item|int].stat.exists == False
  with_sequence: start=0 end="{{ docker_cluster_size|int - 1 }}" stride=1
  tags: [bigchaindb]

- name: Start BigchainDB Docker
  docker_container:
    name: "{{ bigchaindb_docker_name }}{{ item }}"
    image: "{{ bigchaindb_image_name }}"
    detach: true
    published_ports:
      - "{{ bigchandb_host_port|int + item|int }}:{{ bigchaindb_default_port }}"
    restart_policy: always
    volumes:
      - "{{ bigchaindb_host_mount_dir }}{{ item|string }}:/data"
    state: started
  with_sequence: start=0 end="{{ docker_cluster_size|int - 1 }}" stride=1
  tags: [bigchaindb]

- name: Get BigchainDB node public key
  shell: "cat {{ bigchaindb_host_mount_dir + item|string }}/.bigchaindb"
  register: bdb_node_config
  with_sequence: start=0 end="{{ docker_cluster_size|int - 1 }}" stride=1
  tags: [bigchaindb]

- name: Set facts for BigchainDB containers
  set_fact:
    pub_key_{{ bigchaindb_docker_name }}{{ item }}="{{ (bdb_node_config.results[item|int].stdout|from_json).keypair.public }}"
  with_sequence: start=0 end="{{ docker_cluster_size|int - 1 }}" stride=1
  tags: [bigchaindb]
